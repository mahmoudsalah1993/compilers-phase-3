Terminals unused in grammar

   T_boolean
   Comma


Grammar

    0 $accept: input $end

    1 input: %empty
    2      | STATEMENT_LIST

    3 STATEMENT_LIST: STATEMENT
    4               | STATEMENT_LIST STATEMENT

    5 STATEMENT: DECLARATION
    6          | IF
    7          | WHILE
    8          | ASSIGNMENT

    9 $@1: %empty

   10 DECLARATION: PRIMITIVE_TYPE id $@1 Semi

   11 PRIMITIVE_TYPE: T_int
   12               | T_float

   13 $@2: %empty

   14 $@3: %empty

   15 IF: T_if OPEN EXPRESSION CLOSE Openbracket $@2 STATEMENT Closebracket T_else $@3 Openbracket STATEMENT Closebracket

   16 $@4: %empty

   17 $@5: %empty

   18 WHILE: T_while $@4 OPEN EXPRESSION CLOSE Openbracket $@5 STATEMENT Closebracket

   19 ASSIGNMENT: id assign EXPRESSION Semi

   20 EXPRESSION: SIMPLE_EXPRESSION
   21           | SIMPLE_EXPRESSION relop SIMPLE_EXPRESSION

   22 SIMPLE_EXPRESSION: TERM
   23                  | Minus TERM
   24                  | SIMPLE_EXPRESSION Plus TERM
   25                  | SIMPLE_EXPRESSION Minus TERM

   26 TERM: FACTOR
   27     | TERM Mul FACTOR
   28     | TERM Div FACTOR

   29 FACTOR: id
   30       | num
   31       | OPEN EXPRESSION CLOSE


Terminals, with rules where they appear

$end (0) 0
error (256)
id (258) 10 19 29
num (259) 30
relop (260) 21
T_float (261) 12
T_int (262) 11
Plus (263) 24
Mul (264) 27
Minus (265) 23 25
Div (266) 28
OPEN (267) 15 18 31
CLOSE (268) 15 18 31
T_boolean (269)
T_if (270) 15
T_else (271) 15
T_while (272) 18
assign (273) 19
Semi (274) 10 19
Comma (275)
Openbracket (276) 15 18
Closebracket (277) 15 18


Nonterminals, with rules where they appear

$accept (23)
    on left: 0
input (24)
    on left: 1 2, on right: 0
STATEMENT_LIST (25)
    on left: 3 4, on right: 2 4
STATEMENT (26)
    on left: 5 6 7 8, on right: 3 4 15 18
DECLARATION (27)
    on left: 10, on right: 5
$@1 (28)
    on left: 9, on right: 10
PRIMITIVE_TYPE (29)
    on left: 11 12, on right: 10
IF (30)
    on left: 15, on right: 6
$@2 (31)
    on left: 13, on right: 15
$@3 (32)
    on left: 14, on right: 15
WHILE (33)
    on left: 18, on right: 7
$@4 (34)
    on left: 16, on right: 18
$@5 (35)
    on left: 17, on right: 18
ASSIGNMENT (36)
    on left: 19, on right: 8
EXPRESSION (37)
    on left: 20 21, on right: 15 18 19 31
SIMPLE_EXPRESSION (38)
    on left: 22 23 24 25, on right: 20 21 24 25
TERM (39)
    on left: 26 27 28, on right: 22 23 24 25 27 28
FACTOR (40)
    on left: 29 30 31, on right: 26 27 28


State 0

    0 $accept: . input $end

    id       shift, and go to state 1
    T_float  shift, and go to state 2
    T_int    shift, and go to state 3
    T_if     shift, and go to state 4
    T_while  shift, and go to state 5

    $default  reduce using rule 1 (input)

    input           go to state 6
    STATEMENT_LIST  go to state 7
    STATEMENT       go to state 8
    DECLARATION     go to state 9
    PRIMITIVE_TYPE  go to state 10
    IF              go to state 11
    WHILE           go to state 12
    ASSIGNMENT      go to state 13


State 1

   19 ASSIGNMENT: id . assign EXPRESSION Semi

    assign  shift, and go to state 14


State 2

   12 PRIMITIVE_TYPE: T_float .

    $default  reduce using rule 12 (PRIMITIVE_TYPE)


State 3

   11 PRIMITIVE_TYPE: T_int .

    $default  reduce using rule 11 (PRIMITIVE_TYPE)


State 4

   15 IF: T_if . OPEN EXPRESSION CLOSE Openbracket $@2 STATEMENT Closebracket T_else $@3 Openbracket STATEMENT Closebracket

    OPEN  shift, and go to state 15


State 5

   18 WHILE: T_while . $@4 OPEN EXPRESSION CLOSE Openbracket $@5 STATEMENT Closebracket

    $default  reduce using rule 16 ($@4)

    $@4  go to state 16


State 6

    0 $accept: input . $end

    $end  shift, and go to state 17


State 7

    2 input: STATEMENT_LIST .
    4 STATEMENT_LIST: STATEMENT_LIST . STATEMENT

    id       shift, and go to state 1
    T_float  shift, and go to state 2
    T_int    shift, and go to state 3
    T_if     shift, and go to state 4
    T_while  shift, and go to state 5

    $default  reduce using rule 2 (input)

    STATEMENT       go to state 18
    DECLARATION     go to state 9
    PRIMITIVE_TYPE  go to state 10
    IF              go to state 11
    WHILE           go to state 12
    ASSIGNMENT      go to state 13


State 8

    3 STATEMENT_LIST: STATEMENT .

    $default  reduce using rule 3 (STATEMENT_LIST)


State 9

    5 STATEMENT: DECLARATION .

    $default  reduce using rule 5 (STATEMENT)


State 10

   10 DECLARATION: PRIMITIVE_TYPE . id $@1 Semi

    id  shift, and go to state 19


State 11

    6 STATEMENT: IF .

    $default  reduce using rule 6 (STATEMENT)


State 12

    7 STATEMENT: WHILE .

    $default  reduce using rule 7 (STATEMENT)


State 13

    8 STATEMENT: ASSIGNMENT .

    $default  reduce using rule 8 (STATEMENT)


State 14

   19 ASSIGNMENT: id assign . EXPRESSION Semi

    id     shift, and go to state 20
    num    shift, and go to state 21
    Minus  shift, and go to state 22
    OPEN   shift, and go to state 23

    EXPRESSION         go to state 24
    SIMPLE_EXPRESSION  go to state 25
    TERM               go to state 26
    FACTOR             go to state 27


State 15

   15 IF: T_if OPEN . EXPRESSION CLOSE Openbracket $@2 STATEMENT Closebracket T_else $@3 Openbracket STATEMENT Closebracket

    id     shift, and go to state 20
    num    shift, and go to state 21
    Minus  shift, and go to state 22
    OPEN   shift, and go to state 23

    EXPRESSION         go to state 28
    SIMPLE_EXPRESSION  go to state 25
    TERM               go to state 26
    FACTOR             go to state 27


State 16

   18 WHILE: T_while $@4 . OPEN EXPRESSION CLOSE Openbracket $@5 STATEMENT Closebracket

    OPEN  shift, and go to state 29


State 17

    0 $accept: input $end .

    $default  accept


State 18

    4 STATEMENT_LIST: STATEMENT_LIST STATEMENT .

    $default  reduce using rule 4 (STATEMENT_LIST)


State 19

   10 DECLARATION: PRIMITIVE_TYPE id . $@1 Semi

    $default  reduce using rule 9 ($@1)

    $@1  go to state 30


State 20

   29 FACTOR: id .

    $default  reduce using rule 29 (FACTOR)


State 21

   30 FACTOR: num .

    $default  reduce using rule 30 (FACTOR)


State 22

   23 SIMPLE_EXPRESSION: Minus . TERM

    id    shift, and go to state 20
    num   shift, and go to state 21
    OPEN  shift, and go to state 23

    TERM    go to state 31
    FACTOR  go to state 27


State 23

   31 FACTOR: OPEN . EXPRESSION CLOSE

    id     shift, and go to state 20
    num    shift, and go to state 21
    Minus  shift, and go to state 22
    OPEN   shift, and go to state 23

    EXPRESSION         go to state 32
    SIMPLE_EXPRESSION  go to state 25
    TERM               go to state 26
    FACTOR             go to state 27


State 24

   19 ASSIGNMENT: id assign EXPRESSION . Semi

    Semi  shift, and go to state 33


State 25

   20 EXPRESSION: SIMPLE_EXPRESSION .
   21           | SIMPLE_EXPRESSION . relop SIMPLE_EXPRESSION
   24 SIMPLE_EXPRESSION: SIMPLE_EXPRESSION . Plus TERM
   25                  | SIMPLE_EXPRESSION . Minus TERM

    relop  shift, and go to state 34
    Plus   shift, and go to state 35
    Minus  shift, and go to state 36

    $default  reduce using rule 20 (EXPRESSION)


State 26

   22 SIMPLE_EXPRESSION: TERM .
   27 TERM: TERM . Mul FACTOR
   28     | TERM . Div FACTOR

    Mul  shift, and go to state 37
    Div  shift, and go to state 38

    $default  reduce using rule 22 (SIMPLE_EXPRESSION)


State 27

   26 TERM: FACTOR .

    $default  reduce using rule 26 (TERM)


State 28

   15 IF: T_if OPEN EXPRESSION . CLOSE Openbracket $@2 STATEMENT Closebracket T_else $@3 Openbracket STATEMENT Closebracket

    CLOSE  shift, and go to state 39


State 29

   18 WHILE: T_while $@4 OPEN . EXPRESSION CLOSE Openbracket $@5 STATEMENT Closebracket

    id     shift, and go to state 20
    num    shift, and go to state 21
    Minus  shift, and go to state 22
    OPEN   shift, and go to state 23

    EXPRESSION         go to state 40
    SIMPLE_EXPRESSION  go to state 25
    TERM               go to state 26
    FACTOR             go to state 27


State 30

   10 DECLARATION: PRIMITIVE_TYPE id $@1 . Semi

    Semi  shift, and go to state 41


State 31

   23 SIMPLE_EXPRESSION: Minus TERM .
   27 TERM: TERM . Mul FACTOR
   28     | TERM . Div FACTOR

    Mul  shift, and go to state 37
    Div  shift, and go to state 38

    $default  reduce using rule 23 (SIMPLE_EXPRESSION)


State 32

   31 FACTOR: OPEN EXPRESSION . CLOSE

    CLOSE  shift, and go to state 42


State 33

   19 ASSIGNMENT: id assign EXPRESSION Semi .

    $default  reduce using rule 19 (ASSIGNMENT)


State 34

   21 EXPRESSION: SIMPLE_EXPRESSION relop . SIMPLE_EXPRESSION

    id     shift, and go to state 20
    num    shift, and go to state 21
    Minus  shift, and go to state 22
    OPEN   shift, and go to state 23

    SIMPLE_EXPRESSION  go to state 43
    TERM               go to state 26
    FACTOR             go to state 27


State 35

   24 SIMPLE_EXPRESSION: SIMPLE_EXPRESSION Plus . TERM

    id    shift, and go to state 20
    num   shift, and go to state 21
    OPEN  shift, and go to state 23

    TERM    go to state 44
    FACTOR  go to state 27


State 36

   25 SIMPLE_EXPRESSION: SIMPLE_EXPRESSION Minus . TERM

    id    shift, and go to state 20
    num   shift, and go to state 21
    OPEN  shift, and go to state 23

    TERM    go to state 45
    FACTOR  go to state 27


State 37

   27 TERM: TERM Mul . FACTOR

    id    shift, and go to state 20
    num   shift, and go to state 21
    OPEN  shift, and go to state 23

    FACTOR  go to state 46


State 38

   28 TERM: TERM Div . FACTOR

    id    shift, and go to state 20
    num   shift, and go to state 21
    OPEN  shift, and go to state 23

    FACTOR  go to state 47


State 39

   15 IF: T_if OPEN EXPRESSION CLOSE . Openbracket $@2 STATEMENT Closebracket T_else $@3 Openbracket STATEMENT Closebracket

    Openbracket  shift, and go to state 48


State 40

   18 WHILE: T_while $@4 OPEN EXPRESSION . CLOSE Openbracket $@5 STATEMENT Closebracket

    CLOSE  shift, and go to state 49


State 41

   10 DECLARATION: PRIMITIVE_TYPE id $@1 Semi .

    $default  reduce using rule 10 (DECLARATION)


State 42

   31 FACTOR: OPEN EXPRESSION CLOSE .

    $default  reduce using rule 31 (FACTOR)


State 43

   21 EXPRESSION: SIMPLE_EXPRESSION relop SIMPLE_EXPRESSION .
   24 SIMPLE_EXPRESSION: SIMPLE_EXPRESSION . Plus TERM
   25                  | SIMPLE_EXPRESSION . Minus TERM

    Plus   shift, and go to state 35
    Minus  shift, and go to state 36

    $default  reduce using rule 21 (EXPRESSION)


State 44

   24 SIMPLE_EXPRESSION: SIMPLE_EXPRESSION Plus TERM .
   27 TERM: TERM . Mul FACTOR
   28     | TERM . Div FACTOR

    Mul  shift, and go to state 37
    Div  shift, and go to state 38

    $default  reduce using rule 24 (SIMPLE_EXPRESSION)


State 45

   25 SIMPLE_EXPRESSION: SIMPLE_EXPRESSION Minus TERM .
   27 TERM: TERM . Mul FACTOR
   28     | TERM . Div FACTOR

    Mul  shift, and go to state 37
    Div  shift, and go to state 38

    $default  reduce using rule 25 (SIMPLE_EXPRESSION)


State 46

   27 TERM: TERM Mul FACTOR .

    $default  reduce using rule 27 (TERM)


State 47

   28 TERM: TERM Div FACTOR .

    $default  reduce using rule 28 (TERM)


State 48

   15 IF: T_if OPEN EXPRESSION CLOSE Openbracket . $@2 STATEMENT Closebracket T_else $@3 Openbracket STATEMENT Closebracket

    $default  reduce using rule 13 ($@2)

    $@2  go to state 50


State 49

   18 WHILE: T_while $@4 OPEN EXPRESSION CLOSE . Openbracket $@5 STATEMENT Closebracket

    Openbracket  shift, and go to state 51


State 50

   15 IF: T_if OPEN EXPRESSION CLOSE Openbracket $@2 . STATEMENT Closebracket T_else $@3 Openbracket STATEMENT Closebracket

    id       shift, and go to state 1
    T_float  shift, and go to state 2
    T_int    shift, and go to state 3
    T_if     shift, and go to state 4
    T_while  shift, and go to state 5

    STATEMENT       go to state 52
    DECLARATION     go to state 9
    PRIMITIVE_TYPE  go to state 10
    IF              go to state 11
    WHILE           go to state 12
    ASSIGNMENT      go to state 13


State 51

   18 WHILE: T_while $@4 OPEN EXPRESSION CLOSE Openbracket . $@5 STATEMENT Closebracket

    $default  reduce using rule 17 ($@5)

    $@5  go to state 53


State 52

   15 IF: T_if OPEN EXPRESSION CLOSE Openbracket $@2 STATEMENT . Closebracket T_else $@3 Openbracket STATEMENT Closebracket

    Closebracket  shift, and go to state 54


State 53

   18 WHILE: T_while $@4 OPEN EXPRESSION CLOSE Openbracket $@5 . STATEMENT Closebracket

    id       shift, and go to state 1
    T_float  shift, and go to state 2
    T_int    shift, and go to state 3
    T_if     shift, and go to state 4
    T_while  shift, and go to state 5

    STATEMENT       go to state 55
    DECLARATION     go to state 9
    PRIMITIVE_TYPE  go to state 10
    IF              go to state 11
    WHILE           go to state 12
    ASSIGNMENT      go to state 13


State 54

   15 IF: T_if OPEN EXPRESSION CLOSE Openbracket $@2 STATEMENT Closebracket . T_else $@3 Openbracket STATEMENT Closebracket

    T_else  shift, and go to state 56


State 55

   18 WHILE: T_while $@4 OPEN EXPRESSION CLOSE Openbracket $@5 STATEMENT . Closebracket

    Closebracket  shift, and go to state 57


State 56

   15 IF: T_if OPEN EXPRESSION CLOSE Openbracket $@2 STATEMENT Closebracket T_else . $@3 Openbracket STATEMENT Closebracket

    $default  reduce using rule 14 ($@3)

    $@3  go to state 58


State 57

   18 WHILE: T_while $@4 OPEN EXPRESSION CLOSE Openbracket $@5 STATEMENT Closebracket .

    $default  reduce using rule 18 (WHILE)


State 58

   15 IF: T_if OPEN EXPRESSION CLOSE Openbracket $@2 STATEMENT Closebracket T_else $@3 . Openbracket STATEMENT Closebracket

    Openbracket  shift, and go to state 59


State 59

   15 IF: T_if OPEN EXPRESSION CLOSE Openbracket $@2 STATEMENT Closebracket T_else $@3 Openbracket . STATEMENT Closebracket

    id       shift, and go to state 1
    T_float  shift, and go to state 2
    T_int    shift, and go to state 3
    T_if     shift, and go to state 4
    T_while  shift, and go to state 5

    STATEMENT       go to state 60
    DECLARATION     go to state 9
    PRIMITIVE_TYPE  go to state 10
    IF              go to state 11
    WHILE           go to state 12
    ASSIGNMENT      go to state 13


State 60

   15 IF: T_if OPEN EXPRESSION CLOSE Openbracket $@2 STATEMENT Closebracket T_else $@3 Openbracket STATEMENT . Closebracket

    Closebracket  shift, and go to state 61


State 61

   15 IF: T_if OPEN EXPRESSION CLOSE Openbracket $@2 STATEMENT Closebracket T_else $@3 Openbracket STATEMENT Closebracket .

    $default  reduce using rule 15 (IF)
