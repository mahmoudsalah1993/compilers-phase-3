Terminals unused in grammar

   addop
   mulop
   Div
   T_boolean
   Comma


Rules useless in parser due to conflicts

   25 TERM: TERM Mul FACTOR


State 47 conflicts: 6 reduce/reduce


Grammar

    0 $accept: input $end

    1 input: %empty
    2      | STATEMENT_LIST

    3 STATEMENT_LIST: STATEMENT
    4               | STATEMENT_LIST STATEMENT

    5 STATEMENT: DECLARATION
    6          | IF
    7          | WHILE
    8          | ASSIGNMENT

    9 $@1: %empty

   10 DECLARATION: PRIMITIVE_TYPE id $@1 Semi

   11 PRIMITIVE_TYPE: T_int
   12               | T_float

   13 IF: T_if OPEN EXPRESSION CLOSE Openbracket STATEMENT Closebracket T_else Openbracket STATEMENT Closebracket

   14 WHILE: T_while OPEN EXPRESSION CLOSE Openbracket STATEMENT Closebracket

   15 $@2: %empty

   16 ASSIGNMENT: id $@2 assign EXPRESSION Semi

   17 EXPRESSION: SIMPLE_EXPRESSION
   18           | SIMPLE_EXPRESSION relop SIMPLE_EXPRESSION

   19 SIMPLE_EXPRESSION: TERM
   20                  | Minus TERM
   21                  | SIMPLE_EXPRESSION Plus TERM
   22                  | SIMPLE_EXPRESSION Minus TERM

   23 TERM: FACTOR
   24     | TERM Mul FACTOR
   25     | TERM Mul FACTOR

   26 FACTOR: id
   27       | num
   28       | OPEN EXPRESSION CLOSE


Terminals, with rules where they appear

$end (0) 0
error (256)
id (258) 10 16 26
num (259) 27
addop (260)
mulop (261)
relop (262) 18
T_float (263) 12
T_int (264) 11
Plus (265) 21
Mul (266) 24 25
Minus (267) 20 22
Div (268)
OPEN (269) 13 14 28
CLOSE (270) 13 14 28
T_boolean (271)
T_if (272) 13
T_else (273) 13
T_while (274) 14
assign (275) 16
Semi (276) 10 16
Comma (277)
Openbracket (278) 13 14
Closebracket (279) 13 14


Nonterminals, with rules where they appear

$accept (25)
    on left: 0
input (26)
    on left: 1 2, on right: 0
STATEMENT_LIST (27)
    on left: 3 4, on right: 2 4
STATEMENT (28)
    on left: 5 6 7 8, on right: 3 4 13 14
DECLARATION (29)
    on left: 10, on right: 5
$@1 (30)
    on left: 9, on right: 10
PRIMITIVE_TYPE (31)
    on left: 11 12, on right: 10
IF (32)
    on left: 13, on right: 6
WHILE (33)
    on left: 14, on right: 7
ASSIGNMENT (34)
    on left: 16, on right: 8
$@2 (35)
    on left: 15, on right: 16
EXPRESSION (36)
    on left: 17 18, on right: 13 14 16 28
SIMPLE_EXPRESSION (37)
    on left: 19 20 21 22, on right: 17 18 21 22
TERM (38)
    on left: 23 24 25, on right: 19 20 21 22 24 25
FACTOR (39)
    on left: 26 27 28, on right: 23 24 25


State 0

    0 $accept: . input $end

    id       shift, and go to state 1
    T_float  shift, and go to state 2
    T_int    shift, and go to state 3
    T_if     shift, and go to state 4
    T_while  shift, and go to state 5

    $default  reduce using rule 1 (input)

    input           go to state 6
    STATEMENT_LIST  go to state 7
    STATEMENT       go to state 8
    DECLARATION     go to state 9
    PRIMITIVE_TYPE  go to state 10
    IF              go to state 11
    WHILE           go to state 12
    ASSIGNMENT      go to state 13


State 1

   16 ASSIGNMENT: id . $@2 assign EXPRESSION Semi

    $default  reduce using rule 15 ($@2)

    $@2  go to state 14


State 2

   12 PRIMITIVE_TYPE: T_float .

    $default  reduce using rule 12 (PRIMITIVE_TYPE)


State 3

   11 PRIMITIVE_TYPE: T_int .

    $default  reduce using rule 11 (PRIMITIVE_TYPE)


State 4

   13 IF: T_if . OPEN EXPRESSION CLOSE Openbracket STATEMENT Closebracket T_else Openbracket STATEMENT Closebracket

    OPEN  shift, and go to state 15


State 5

   14 WHILE: T_while . OPEN EXPRESSION CLOSE Openbracket STATEMENT Closebracket

    OPEN  shift, and go to state 16


State 6

    0 $accept: input . $end

    $end  shift, and go to state 17


State 7

    2 input: STATEMENT_LIST .
    4 STATEMENT_LIST: STATEMENT_LIST . STATEMENT

    id       shift, and go to state 1
    T_float  shift, and go to state 2
    T_int    shift, and go to state 3
    T_if     shift, and go to state 4
    T_while  shift, and go to state 5

    $default  reduce using rule 2 (input)

    STATEMENT       go to state 18
    DECLARATION     go to state 9
    PRIMITIVE_TYPE  go to state 10
    IF              go to state 11
    WHILE           go to state 12
    ASSIGNMENT      go to state 13


State 8

    3 STATEMENT_LIST: STATEMENT .

    $default  reduce using rule 3 (STATEMENT_LIST)


State 9

    5 STATEMENT: DECLARATION .

    $default  reduce using rule 5 (STATEMENT)


State 10

   10 DECLARATION: PRIMITIVE_TYPE . id $@1 Semi

    id  shift, and go to state 19


State 11

    6 STATEMENT: IF .

    $default  reduce using rule 6 (STATEMENT)


State 12

    7 STATEMENT: WHILE .

    $default  reduce using rule 7 (STATEMENT)


State 13

    8 STATEMENT: ASSIGNMENT .

    $default  reduce using rule 8 (STATEMENT)


State 14

   16 ASSIGNMENT: id $@2 . assign EXPRESSION Semi

    assign  shift, and go to state 20


State 15

   13 IF: T_if OPEN . EXPRESSION CLOSE Openbracket STATEMENT Closebracket T_else Openbracket STATEMENT Closebracket

    id     shift, and go to state 21
    num    shift, and go to state 22
    Minus  shift, and go to state 23
    OPEN   shift, and go to state 24

    EXPRESSION         go to state 25
    SIMPLE_EXPRESSION  go to state 26
    TERM               go to state 27
    FACTOR             go to state 28


State 16

   14 WHILE: T_while OPEN . EXPRESSION CLOSE Openbracket STATEMENT Closebracket

    id     shift, and go to state 21
    num    shift, and go to state 22
    Minus  shift, and go to state 23
    OPEN   shift, and go to state 24

    EXPRESSION         go to state 29
    SIMPLE_EXPRESSION  go to state 26
    TERM               go to state 27
    FACTOR             go to state 28


State 17

    0 $accept: input $end .

    $default  accept


State 18

    4 STATEMENT_LIST: STATEMENT_LIST STATEMENT .

    $default  reduce using rule 4 (STATEMENT_LIST)


State 19

   10 DECLARATION: PRIMITIVE_TYPE id . $@1 Semi

    $default  reduce using rule 9 ($@1)

    $@1  go to state 30


State 20

   16 ASSIGNMENT: id $@2 assign . EXPRESSION Semi

    id     shift, and go to state 21
    num    shift, and go to state 22
    Minus  shift, and go to state 23
    OPEN   shift, and go to state 24

    EXPRESSION         go to state 31
    SIMPLE_EXPRESSION  go to state 26
    TERM               go to state 27
    FACTOR             go to state 28


State 21

   26 FACTOR: id .

    $default  reduce using rule 26 (FACTOR)


State 22

   27 FACTOR: num .

    $default  reduce using rule 27 (FACTOR)


State 23

   20 SIMPLE_EXPRESSION: Minus . TERM

    id    shift, and go to state 21
    num   shift, and go to state 22
    OPEN  shift, and go to state 24

    TERM    go to state 32
    FACTOR  go to state 28


State 24

   28 FACTOR: OPEN . EXPRESSION CLOSE

    id     shift, and go to state 21
    num    shift, and go to state 22
    Minus  shift, and go to state 23
    OPEN   shift, and go to state 24

    EXPRESSION         go to state 33
    SIMPLE_EXPRESSION  go to state 26
    TERM               go to state 27
    FACTOR             go to state 28


State 25

   13 IF: T_if OPEN EXPRESSION . CLOSE Openbracket STATEMENT Closebracket T_else Openbracket STATEMENT Closebracket

    CLOSE  shift, and go to state 34


State 26

   17 EXPRESSION: SIMPLE_EXPRESSION .
   18           | SIMPLE_EXPRESSION . relop SIMPLE_EXPRESSION
   21 SIMPLE_EXPRESSION: SIMPLE_EXPRESSION . Plus TERM
   22                  | SIMPLE_EXPRESSION . Minus TERM

    relop  shift, and go to state 35
    Plus   shift, and go to state 36
    Minus  shift, and go to state 37

    $default  reduce using rule 17 (EXPRESSION)


State 27

   19 SIMPLE_EXPRESSION: TERM .
   24 TERM: TERM . Mul FACTOR
   25     | TERM . Mul FACTOR

    Mul  shift, and go to state 38

    $default  reduce using rule 19 (SIMPLE_EXPRESSION)


State 28

   23 TERM: FACTOR .

    $default  reduce using rule 23 (TERM)


State 29

   14 WHILE: T_while OPEN EXPRESSION . CLOSE Openbracket STATEMENT Closebracket

    CLOSE  shift, and go to state 39


State 30

   10 DECLARATION: PRIMITIVE_TYPE id $@1 . Semi

    Semi  shift, and go to state 40


State 31

   16 ASSIGNMENT: id $@2 assign EXPRESSION . Semi

    Semi  shift, and go to state 41


State 32

   20 SIMPLE_EXPRESSION: Minus TERM .
   24 TERM: TERM . Mul FACTOR
   25     | TERM . Mul FACTOR

    Mul  shift, and go to state 38

    $default  reduce using rule 20 (SIMPLE_EXPRESSION)


State 33

   28 FACTOR: OPEN EXPRESSION . CLOSE

    CLOSE  shift, and go to state 42


State 34

   13 IF: T_if OPEN EXPRESSION CLOSE . Openbracket STATEMENT Closebracket T_else Openbracket STATEMENT Closebracket

    Openbracket  shift, and go to state 43


State 35

   18 EXPRESSION: SIMPLE_EXPRESSION relop . SIMPLE_EXPRESSION

    id     shift, and go to state 21
    num    shift, and go to state 22
    Minus  shift, and go to state 23
    OPEN   shift, and go to state 24

    SIMPLE_EXPRESSION  go to state 44
    TERM               go to state 27
    FACTOR             go to state 28


State 36

   21 SIMPLE_EXPRESSION: SIMPLE_EXPRESSION Plus . TERM

    id    shift, and go to state 21
    num   shift, and go to state 22
    OPEN  shift, and go to state 24

    TERM    go to state 45
    FACTOR  go to state 28


State 37

   22 SIMPLE_EXPRESSION: SIMPLE_EXPRESSION Minus . TERM

    id    shift, and go to state 21
    num   shift, and go to state 22
    OPEN  shift, and go to state 24

    TERM    go to state 46
    FACTOR  go to state 28


State 38

   24 TERM: TERM Mul . FACTOR
   25     | TERM Mul . FACTOR

    id    shift, and go to state 21
    num   shift, and go to state 22
    OPEN  shift, and go to state 24

    FACTOR  go to state 47


State 39

   14 WHILE: T_while OPEN EXPRESSION CLOSE . Openbracket STATEMENT Closebracket

    Openbracket  shift, and go to state 48


State 40

   10 DECLARATION: PRIMITIVE_TYPE id $@1 Semi .

    $default  reduce using rule 10 (DECLARATION)


State 41

   16 ASSIGNMENT: id $@2 assign EXPRESSION Semi .

    $default  reduce using rule 16 (ASSIGNMENT)


State 42

   28 FACTOR: OPEN EXPRESSION CLOSE .

    $default  reduce using rule 28 (FACTOR)


State 43

   13 IF: T_if OPEN EXPRESSION CLOSE Openbracket . STATEMENT Closebracket T_else Openbracket STATEMENT Closebracket

    id       shift, and go to state 1
    T_float  shift, and go to state 2
    T_int    shift, and go to state 3
    T_if     shift, and go to state 4
    T_while  shift, and go to state 5

    STATEMENT       go to state 49
    DECLARATION     go to state 9
    PRIMITIVE_TYPE  go to state 10
    IF              go to state 11
    WHILE           go to state 12
    ASSIGNMENT      go to state 13


State 44

   18 EXPRESSION: SIMPLE_EXPRESSION relop SIMPLE_EXPRESSION .
   21 SIMPLE_EXPRESSION: SIMPLE_EXPRESSION . Plus TERM
   22                  | SIMPLE_EXPRESSION . Minus TERM

    Plus   shift, and go to state 36
    Minus  shift, and go to state 37

    $default  reduce using rule 18 (EXPRESSION)


State 45

   21 SIMPLE_EXPRESSION: SIMPLE_EXPRESSION Plus TERM .
   24 TERM: TERM . Mul FACTOR
   25     | TERM . Mul FACTOR

    Mul  shift, and go to state 38

    $default  reduce using rule 21 (SIMPLE_EXPRESSION)


State 46

   22 SIMPLE_EXPRESSION: SIMPLE_EXPRESSION Minus TERM .
   24 TERM: TERM . Mul FACTOR
   25     | TERM . Mul FACTOR

    Mul  shift, and go to state 38

    $default  reduce using rule 22 (SIMPLE_EXPRESSION)


State 47

   24 TERM: TERM Mul FACTOR .
   25     | TERM Mul FACTOR .

    relop     reduce using rule 24 (TERM)
    relop     [reduce using rule 25 (TERM)]
    Plus      reduce using rule 24 (TERM)
    Plus      [reduce using rule 25 (TERM)]
    Mul       reduce using rule 24 (TERM)
    Mul       [reduce using rule 25 (TERM)]
    Minus     reduce using rule 24 (TERM)
    Minus     [reduce using rule 25 (TERM)]
    CLOSE     reduce using rule 24 (TERM)
    CLOSE     [reduce using rule 25 (TERM)]
    Semi      reduce using rule 24 (TERM)
    Semi      [reduce using rule 25 (TERM)]
    $default  reduce using rule 24 (TERM)


State 48

   14 WHILE: T_while OPEN EXPRESSION CLOSE Openbracket . STATEMENT Closebracket

    id       shift, and go to state 1
    T_float  shift, and go to state 2
    T_int    shift, and go to state 3
    T_if     shift, and go to state 4
    T_while  shift, and go to state 5

    STATEMENT       go to state 50
    DECLARATION     go to state 9
    PRIMITIVE_TYPE  go to state 10
    IF              go to state 11
    WHILE           go to state 12
    ASSIGNMENT      go to state 13


State 49

   13 IF: T_if OPEN EXPRESSION CLOSE Openbracket STATEMENT . Closebracket T_else Openbracket STATEMENT Closebracket

    Closebracket  shift, and go to state 51


State 50

   14 WHILE: T_while OPEN EXPRESSION CLOSE Openbracket STATEMENT . Closebracket

    Closebracket  shift, and go to state 52


State 51

   13 IF: T_if OPEN EXPRESSION CLOSE Openbracket STATEMENT Closebracket . T_else Openbracket STATEMENT Closebracket

    T_else  shift, and go to state 53


State 52

   14 WHILE: T_while OPEN EXPRESSION CLOSE Openbracket STATEMENT Closebracket .

    $default  reduce using rule 14 (WHILE)


State 53

   13 IF: T_if OPEN EXPRESSION CLOSE Openbracket STATEMENT Closebracket T_else . Openbracket STATEMENT Closebracket

    Openbracket  shift, and go to state 54


State 54

   13 IF: T_if OPEN EXPRESSION CLOSE Openbracket STATEMENT Closebracket T_else Openbracket . STATEMENT Closebracket

    id       shift, and go to state 1
    T_float  shift, and go to state 2
    T_int    shift, and go to state 3
    T_if     shift, and go to state 4
    T_while  shift, and go to state 5

    STATEMENT       go to state 55
    DECLARATION     go to state 9
    PRIMITIVE_TYPE  go to state 10
    IF              go to state 11
    WHILE           go to state 12
    ASSIGNMENT      go to state 13


State 55

   13 IF: T_if OPEN EXPRESSION CLOSE Openbracket STATEMENT Closebracket T_else Openbracket STATEMENT . Closebracket

    Closebracket  shift, and go to state 56


State 56

   13 IF: T_if OPEN EXPRESSION CLOSE Openbracket STATEMENT Closebracket T_else Openbracket STATEMENT Closebracket .

    $default  reduce using rule 13 (IF)
